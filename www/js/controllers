* global angular, document, window */
'use strict';
var current_user = {};
angular.module('starter.controllers', ['starter.services'])

.controller('AppCtrl', function($scope, $ionicModal, $ionicPopover, $timeout) {
    // Form data for the login modal
    $scope.loginData = {};
    $scope.isExpanded = false;
    $scope.hasHeaderFabLeft = false;
    $scope.hasHeaderFabRight = false;

    var navIcons = document.getElementsByClassName('ion-navicon');
    for (var i = 0; i < navIcons.length; i++) {
        navIcons.addEventListener('click', function() {
            this.classList.toggle('active');
        });
    }

    ////////////////////////////////////////
    // Layout Methods
    ////////////////////////////////////////

    $scope.hideNavBar = function() {
        document.getElementsByTagName('ion-nav-bar')[0].style.display = 'none';
    };

    $scope.showNavBar = function() {
        document.getElementsByTagName('ion-nav-bar')[0].style.display = 'block';
    };

    $scope.noHeader = function() {
        var content = document.getElementsByTagName('ion-content');
        for (var i = 0; i < content.length; i++) {
            if (content[i].classList.contains('has-header')) {
                content[i].classList.toggle('has-header');
            }
        }
    };

    $scope.setExpanded = function(bool) {
        $scope.isExpanded = bool;
    };

    $scope.setHeaderFab = function(location) {
        var hasHeaderFabLeft = false;
        var hasHeaderFabRight = false;

        switch (location) {
            case 'left':
                hasHeaderFabLeft = true;
                break;
            case 'right':
                hasHeaderFabRight = true;
                break;
        }

        $scope.hasHeaderFabLeft = hasHeaderFabLeft;
        $scope.hasHeaderFabRight = hasHeaderFabRight;
    };

    $scope.hasHeader = function() {
        var content = document.getElementsByTagName('ion-content');
        for (var i = 0; i < content.length; i++) {
            if (!content[i].classList.contains('has-header')) {
                content[i].classList.toggle('has-header');
            }
        }

    };

    $scope.hideHeader = function() {
        $scope.hideNavBar();
        $scope.noHeader();
    };

    $scope.showHeader = function() {
        $scope.showNavBar();
        $scope.hasHeader();
    };

    $scope.clearFabs = function() {
        var fabs = document.getElementsByClassName('button-fab');
        if (fabs.length && fabs.length > 1) {
            fabs[0].remove();
        }
    };
})

.controller('LoginCtrl', function($scope, $rootScope, $timeout, 
    $stateParams, $ionicSideMenuDelegate, $state, $ionicModal, ionicMaterialInk, Accounts) {

    $scope.$parent.clearFabs();
    $timeout(function() {
        $scope.$parent.hideHeader();
    }, 0);
    $ionicSideMenuDelegate.canDragContent(false);
    ionicMaterialInk.displayEffect();
    $scope.modal_password_forgot; 
    $scope.error_change_password = false;
    $scope.error_forgot_password = false;
    $ionicModal.fromTemplateUrl('my-modal.html', {
        scope: $scope,
        animation: 'slide-in-up'
      }).then(function(modal) {
        $scope.modal_change_password = modal;
      });
    $ionicModal.fromTemplateUrl('my-modal.html', {
        scope: $scope,
        animation: 'slide-in-up'
      }).then(function(modal) {
        $scope.modal_forgot_password = modal;
      });
    $scope.login = function(object) {         
      Accounts.getAccountByUserNameAndPassword(object.username, object.password).then(
        function(user){
            if(user != null && user.first_login === 1)
            {
                console.log("Successfully logged in ! : Infos below !");
                console.log(JSON.stringify(user));
                current_user = user;
                $scope.modal_change_password.show();
            }
            else if( user.first_login === 0)
            {
                console.log("Successfully logged in ! : Infos below !");
                console.log(JSON.stringify(user));
                current_user = user;
                $state.go("app.profile");
            }
            else
            {
                console.log("Mot de passe incorrecte.");
            }
        },
        function(message){
            console.log("Mot de passe incorrecte.");
        });
    };
    $scope.reponse = function(){
        $scope.modal_forgot_password.show();
    }
    $scope.changementMDP = function(object) {
        if(!object.password || !object.second_password || !object.question_secrete || !object.reponse_secrete)
        {
            $scope.error_change_password = true
        }
        if(object.password !== object.second_password)
        {
            $scope.error_change_password = true;
        }
        else
        {
            Accounts.changePassword(current_user.username, object.password, object.question_secrete, object.reponse_secrete)
            .then(
            function(){
                $scope.error = false;
                $scope.modal.hide();
                $state.go("app.profile");
            },
            function(erreur){
                console.log("Une erreur est survenu lors du changement de mot de passe !"+erreur.message);
            });
        }
    };
    
})

.controller('ClientCtrl', function($scope, $stateParams){
    $scope.$parent.clearFabs();

})

.controller('RoutesCtrl', function($scope, $rootScope, $stateParams, 
    Routes,
    $ionicSideMenuDelegate, $state, $timeout, ionicMaterialMotion, ionicMaterialInk){
    
    // Set Header
    $ionicSideMenuDelegate.canDragContent(true);
    $scope.$parent.showHeader();
    $scope.$parent.clearFabs();
    $scope.isExpanded = false;
    $scope.$parent.setExpanded(false);
    $scope.$parent.setHeaderFab(false);
    // Set Motion
    $timeout(function() {
        ionicMaterialMotion.slideUp({
            selector: '.slide-up'
        });
    }, 1000);

    $timeout(function() {
        ionicMaterialMotion.fadeSlideInRight({
            startVelocity: 1000
        });
    }, 1500);

    // Set Ink
    ionicMaterialInk.displayEffect();
    var code = Number($stateParams.code);
    $scope.today_routes = [];
    $scope.yesterday_routes = [];
    Routes.getAllRoutes().then(
        function(routes){
            angular.forEach(routes, function(route){
                switch(route.state)
                {
                    case 0:
                        route.color = "red";
                        break;
                    case 1:
                        route.color = "orange";
                        break;
                    case 2:
                        route.color = "green";
                        break;
                    default:
                        break;
                }
                console.log(route);
                route.au_plutard = (new Date(route.date_max)).toGMTString();
                console.log(route.au_plutard);
                $scope.today_routes.push(route);
            });
        },
        function(error){console.log(error.message);}
        );
    if(isNaN(code))
    {
        console.log("isNaN so nothing to do !");
    }
    else if(!isNaN(code) && code == 1)
    {
        Routes.getUnfinishedRoutes().then(
        function(routes){
                angular.forEach(routes, function(route){
                    switch(route.state)
                    {
                        case 0:
                            route.color = "red";
                            break;
                        case 1:
                            route.color = "orange";
                            break;
                        case 2:
                            route.color = "green";
                            break;
                        default:
                            break;
                    }
                    route.au_plutard = (new Date(route.date_max)).toGMTString();
                    console.log(route.au_plutard);
                    $scope.yesterday_routes.push(route);
                });
            
        },
        function(error){
            console.log(error.message);
        });
    }
    else
    {
        console.log("Maybe === 0 line : 206");
    }
    console.log("TEST"+JSON.stringify($scope.today_routes));
    
})

.controller('ClientsCtrl', function($scope, $stateParams, $timeout, $cordovaGeolocation, ionicMaterialInk, ionicMaterialMotion) {
    // Set Header
    $scope.$parent.showHeader();
    $scope.$parent.clearFabs();
    $scope.$parent.setHeaderFab('left');

    // Delay expansion
    $timeout(function() {
        $scope.isExpanded = true;
        $scope.$parent.setExpanded(true);
    }, 300);

    // Set Motion
    ionicMaterialMotion.fadeSlideInRight();

    // Set Ink
    ionicMaterialInk.displayEffect();

    
})

.controller('ProfileCtrl', function($scope, $rootScope, $stateParams, 
    Routes,
    $ionicSideMenuDelegate, $state, $timeout, ionicMaterialMotion, ionicMaterialInk) {
    // Set Header
    $ionicSideMenuDelegate.canDragContent(true);
    $scope.$parent.showHeader();
    $scope.$parent.clearFabs();
    $scope.isExpanded = false;
    $scope.$parent.setExpanded(false);
    $scope.$parent.setHeaderFab(false);
    // Set Motion
    $timeout(function() {
        ionicMaterialMotion.slideUp({
            selector: '.slide-up'
        });
    }, 1000);

    $timeout(function() {
        ionicMaterialMotion.fadeSlideInRight({
            startVelocity: 1000
        });
    }, 1500);

    // Set Ink
    ionicMaterialInk.displayEffect();

    $scope.all = function(){
        $state.go("app.routes", { code : 1});
    };

    $scope.today = function(){
        $state.go("app.routes", { code : 0});
    };

    $scope.unfinished_routes = { 
        isTrue : false, 
        routes : []
    };

    Routes.getUnfinishedRoutes().then(
        function(routes){
            if(routes.length>0)
            {   console.log("Setting it to true");
                $scope.unfinished_routes.isTrue = true;
                angular.forEach(routes, function(route){
                $scope.unfinished_routes.routes.push(route);
                });
            }
        },
        function(error){});
    console.log($scope.unfinished_routes.isTrue);

    $scope.routes = [];
    Routes.getAllRoutes().then(
        function(routes) {
            angular.forEach(routes, function(route){
                switch(route.state)
                {
                    case 0:
                        route.color = "red";
                        break;
                    case 1:
                        route.color = "orange";
                        break;
                    case 2:
                        route.color = "green";
                        break;
                    default:
                        break;
                }
                $scope.routes.push(route);
            });
        },
        function(error){
            console.log(error);
        }
        );
   


})

.controller('MissionsCtrl', function($scope, $stateParams, $timeout, ionicMaterialMotion, ionicMaterialInk) {
    $scope.$parent.showHeader();
    $scope.$parent.clearFabs();
    $scope.isExpanded = true;
    $scope.$parent.setExpanded(true);
    $scope.$parent.setHeaderFab('right');

    $timeout(function() {
        ionicMaterialMotion.fadeSlideIn({
            selector: '.animate-fade-slide-in .item'
        });
    }, 200);

    // Activate ink for controller
    ionicMaterialInk.displayEffect();
})

.controller('ProductsCtrl', function($scope, $stateParams, $timeout, ionicMaterialInk, ionicMaterialMotion) {
    $scope.$parent.showHeader();
    $scope.$parent.clearFabs();
    $scope.isExpanded = true;
    $scope.$parent.setExpanded(true);
    $scope.$parent.setHeaderFab(false);

    // Activate ink for controller
    ionicMaterialInk.displayEffect();

    ionicMaterialMotion.pushDown({
        selector: '.push-down'
    });
    ionicMaterialMotion.fadeSlideInRight({
        selector: '.animate-fade-slide-in .item'
    });

})

;
